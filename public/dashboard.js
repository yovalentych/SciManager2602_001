document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('logout').addEventListener('click', () => {
    localStorage.removeItem('token');
    window.location.href = '/';
  });

  // –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è, —â–æ –≤—Å—ñ –≤–∫–ª–∞–¥–∫–∏ –ø—Ä–∞—Ü—é—é—Ç—å
  loadPage('profile'); // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –ø—Ä–æ—Ñ—ñ–ª—å –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–º—ñ–Ω–∏ –≤–∫–ª–∞–¥–æ–∫ —É –¥–∞—à–±–æ—Ä–¥—ñ
function loadPage(page) {
  const content = document.getElementById('content');

  if (!content) {
    console.error('–ï–ª–µ–º–µ–Ω—Ç #content –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!');
    return;
  }

  switch (page) {
    case 'profile':
      content.innerHTML = `<div id="profileContent"><p>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</p></div>`;
      loadUserProfile();
      break;
    case 'settings':
      content.innerHTML = `<h2>‚öôÔ∏è –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è</h2><p>–¢—É—Ç –±—É–¥—É—Ç—å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É.</p>`;
      break;
    case 'publications':
      content.innerHTML = `<h2>üìÑ –í–∞—à—ñ –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó</h2><p>–¢—É—Ç –º–æ–∂–Ω–∞ –∫–µ—Ä—É–≤–∞—Ç–∏ –≤–∞—à–∏–º–∏ –Ω–∞—É–∫–æ–≤–∏–º–∏ —Å—Ç–∞—Ç—Ç—è–º–∏.</p>`;
      break;
    case 'messages':
      content.innerHTML = `<h2>üí¨ –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</h2><p>–í–∞—à—ñ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Ç–∞ —á–∞—Ç–∏.</p>`;
      break;
    default:
      content.innerHTML = `<h2>–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –¥–∞—à–±–æ—Ä–¥—É!</h2><p>–û–±–µ—Ä—ñ—Ç—å –≤–∫–ª–∞–¥–∫—É –ª—ñ–≤–æ—Ä—É—á, —â–æ–± —Ä–æ–∑–ø–æ—á–∞—Ç–∏ —Ä–æ–±–æ—Ç—É.</p>`;
  }
}

// –§—É–Ω–∫—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
async function loadUserProfile() {
  const token = localStorage.getItem('token');
  if (!token) {
    window.location.href = '/';
    return;
  }

  const response = await fetch('/api/auth/profile', {
    method: 'GET',
    headers: { Authorization: `Bearer ${token}` },
  });

  const data = await response.json();

  if (response.ok) {
    document.getElementById('profileContent').innerHTML = `
          <div class="profile-card">
              <img src="${
                data.avatar && data.avatar !== ''
                  ? data.avatar
                  : '/uploads/default-avatar.png'
              }" alt="–ê–≤–∞—Ç–∞—Ä">
              <h3>${data.firstNameUa} ${data.lastNameUa}</h3>
              <p><strong>–ê—Ñ—ñ–ª—ñ–∞—Ü—ñ—è:</strong> ${
                data.affiliation || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'
              }</p>
              <p><strong>–ü–æ—Å–∞–¥–∞:</strong> ${data.position || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</p>
              <p><strong>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∏–π —Å–∞–π—Ç:</strong> <a href="${
                data.website || '#'
              }" target="_blank">${data.website || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</a></p>
              <button class="edit-profile-btn" onclick="openEditProfileModal()">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø—Ä–æ—Ñ—ñ–ª—å</button>
          </div>
      `;
  } else {
    alert('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é.');
    localStorage.removeItem('token');
    window.location.href = '/';
  }
}

async function saveProfileChanges() {
  const token = localStorage.getItem('token');
  const avatarFile = document.getElementById('editAvatar').files[0];

  const updatedData = {
    affiliation: document.getElementById('editAffiliation').value,
    position: document.getElementById('editPosition').value,
    website: document.getElementById('editWebsite').value,
    socialLinks: {
      googleScholar: document.getElementById('editGoogleScholar').value,
      orcid: document.getElementById('editOrcid').value,
      linkedin: document.getElementById('editLinkedin').value,
    },
  };

  // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∞–≤–∞—Ç–∞—Ä–∫–∏, —è–∫—â–æ —î –Ω–æ–≤–∏–π —Ñ–∞–π–ª
  if (avatarFile) {
    const formData = new FormData();
    formData.append('avatar', avatarFile);

    const avatarResponse = await fetch('/api/auth/upload-avatar', {
      method: 'POST',
      headers: { Authorization: `Bearer ${token}` },
      body: formData,
    });

    const avatarData = await avatarResponse.json();
    if (avatarResponse.ok) {
      updatedData.avatar = avatarData.avatarUrl;
    }
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é
  const response = await fetch('/api/auth/profile', {
    method: 'PUT',
    headers: {
      'Content-Type': 'application/json',
      Authorization: `Bearer ${token}`,
    },
    body: JSON.stringify(updatedData),
  });

  if (response.ok) {
    alert('–ü—Ä–æ—Ñ—ñ–ª—å –æ–Ω–æ–≤–ª–µ–Ω–æ!');
    closeModal();
    loadUserProfile();
  } else {
    alert('–ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é.');
  }
}

// –§—É–Ω–∫—Ü—ñ—ó –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –≤—ñ–∫–Ω–∞
function openEditProfileModal() {
  document.getElementById('editProfileModal').style.display = 'block';
}

function closeModal() {
  document.getElementById('editProfileModal').style.display = 'none';
}

// –î–æ–¥–∞—î–º–æ —Å–ª—É—Ö–∞—á—ñ –ø–æ–¥—ñ–π –¥–ª—è –≤–∫–ª–∞–¥–æ–∫ –ø—ñ—Å–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω–∫–∏
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.sidebar ul li a').forEach((link) => {
    link.addEventListener('click', (event) => {
      event.preventDefault();
      const page = event.target.getAttribute('onclick').match(/'([^']+)'/)[1];
      loadPage(page);
    });
  });
});
